@page "/register"

@using DataLibrary
@using PlantPod.Models
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config
@inject NavigationManager NavManager
@inject IJSRuntime JS
@inject Data.User user

<div class="register-section">
    <img src="img/logo.png" />
    <h3>Inloggen</h3>
    @if (Messages != null)
    {
	    @foreach (var error in Messages)
	    {
		    <p class="error">@error</p>
	    }
    }
    <div class="form">

        <label for="username">Gebruikersnaam</label>
        <input type="text" name="username" @bind="inputUsername" />
        <label for="password">Wachtwoord</label>
        <input type="password" name="password" @bind="inputPassword" />
        <label for="passwordConfirmation">Wachtwoord verificatie</label>
        <input type="password" name="passwordConfirmation" @bind="inputPasswordConfirmation" />

        <button class="primary-button" @onclick="registerUser">Registreren</button>
        <a class="secondary-button" href="login">Inloggen</a>
    </div>
</div>

@code {
    private string inputUsername;
    private string inputPassword;
    private string inputPasswordConfirmation;
    List<string> Messages = new List<string>();

    private async Task registerUser()
    {
        // Attempt to register the user with given data otherwise display error messages
        Messages = await user.registerUser(inputUsername, inputPassword, inputPasswordConfirmation);
        // No errors, send user to login page
        if (Messages.Count == 0)
        {
            NavManager.NavigateTo("/login");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Check if user is logged in otherwise send to login
            if (user.CheckLogin())
            {
                NavManager.NavigateTo("/");
            }
            await JS.InvokeAsync<string>("showNavmenu", false);

            // Refresh html
            StateHasChanged();
        }
    }
}